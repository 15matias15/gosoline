// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import http "github.com/applike/gosoline/pkg/http"
import mock "github.com/stretchr/testify/mock"
import time "time"

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// Get provides a mock function with given fields: request
func (_m *Client) Get(request *http.Request) (*http.Response, error) {
	ret := _m.Called(request)

	var r0 *http.Response
	if rf, ok := ret.Get(0).(func(*http.Request) *http.Response); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*http.Response)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*http.Request) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Post provides a mock function with given fields: request
func (_m *Client) Post(request *http.Request) (*http.Response, error) {
	ret := _m.Called(request)

	var r0 *http.Response
	if rf, ok := ret.Get(0).(func(*http.Request) *http.Response); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*http.Response)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*http.Request) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetTimeout provides a mock function with given fields: timeout
func (_m *Client) SetTimeout(timeout time.Duration) {
	_m.Called(timeout)
}

// SetUserAgent provides a mock function with given fields: ua
func (_m *Client) SetUserAgent(ua string) {
	_m.Called(ua)
}
