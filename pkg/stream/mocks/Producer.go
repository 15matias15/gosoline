// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"
import mock "github.com/stretchr/testify/mock"

// Producer is an autogenerated mock type for the Producer type
type Producer struct {
	mock.Mock
}

// Write provides a mock function with given fields: ctx, models, attributeSets
func (_m *Producer) Write(ctx context.Context, models interface{}, attributeSets ...map[string]interface{}) error {
	var _ca []interface{}
	_ca = append(_ca, ctx, models)

	for _, set := range attributeSets {
		_ca = append(_ca, set)
	}

	ret := _m.Called(_ca...)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, interface{}, ...map[string]interface{}) error); ok {
		r0 = rf(ctx, models, attributeSets...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WriteOne provides a mock function with given fields: ctx, model, attributeSets
func (_m *Producer) WriteOne(ctx context.Context, model interface{}, attributeSets ...map[string]interface{}) error {
	var _ca []interface{}
	_ca = append(_ca, ctx, model)

	for _, set := range attributeSets {
		_ca = append(_ca, set)
	}

	ret := _m.Called(_ca...)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, interface{}, ...map[string]interface{}) error); ok {
		r0 = rf(ctx, model, attributeSets...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
